# total pkt arrival rate = 1e7
# same controller capacity 700K
# scheduler to controller latency sample from a linear distribution from 1 to 50ms

import numpy as np
import pandas as pd
import csv

class Setting(object):

    def __init__(self, num, arrRate, sch_loc, file):
        algorithm = ['RANDOM', 'WEIGHTED_RANDOM', 'GD', 'Deterministic', 'DELAY_RANDOM', 'CAPA_DELAY_RANDOM', 'CNPA']
        self.algo = algorithm[-1]
        self.history_len = 1  # the number of history data (response time & utilization) for each variable will be used
        self.respTime_update_interval = 0.5  # (sec) the time interval used in averaging the response time
        self.util_update_interval = 0.5
        self.timeStep = 1
        self.probe_overhead = 0
        self.beta = 0.1

        self.maxSimTime = 60  #240
        self._init(num, arrRate, sch_loc)
        self.file = file
        # df = pd.DataFrame([["controller Number", self.ctlNum, "control plane capacity", sum(self.ctlRate), "switch Number", self.swNum, "scheduler location", sch_loc, "arrival rate", "610*%s"%arrRate]])
        # df.to_csv(self.file, index=False, header=False, mode='a')

    # ================================================================================
    def _init(self, num, arrRate, sch_loc):
        if num == 0:  # North and south America
            print("================ North and South America =================")
            latency_matrix = [[0.0,5.0,52.0,18.0,15.0,26.0,40.0,50.0,47.0,47.0,30.0,50.0,16.0,89.0,49.0,20.0,15.0,21.0,14.0,17.0,9.0,8.0,16.0,50.0,5.0,19.0,12.0,27.0,15.0,44.0,63.0,51.0,131.0,42.0,50.0,18.0,31.0,20.0,55.0,18.0,19.0,131.0,20.0,125.0,52.0,38.0,159.0,26.0,43.0],
        [5.0,0.0,45.0,11.0,10.0,31.0,51.0,43.0,41.0,42.0,17.0,45.0,17.0,93.0,42.0,16.0,21.0,20.0,12.0,22.0,14.0,3.0,15.0,54.0,10.0,27.0,7.0,20.0,9.0,49.0,68.0,56.0,136.0,55.0,54.0,19.0,26.0,17.0,49.0,23.0,14.0,136.0,18.0,130.0,47.0,42.0,164.0,21.0,38.0],
        [52.0,45.0,0.0,34.0,41.0,46.0,10.0,2.0,4.0,16.0,58.0,20.0,55.0,54.0,17.0,58.0,67.0,61.0,37.0,41.0,60.0,42.0,67.0,8.0,57.0,73.0,48.0,25.0,49.0,87.0,106.0,94.0,174.0,9.0,65.0,68.0,67.0,58.0,5.0,43.0,53.0,174.0,59.0,168.0,22.0,53.0,202.0,60.0,33.0],
        [18.0,11.0,34.0,0.0,8.0,22.0,39.0,32.0,30.0,37.0,24.0,38.0,24.0,84.0,31.0,23.0,33.0,27.0,3.0,13.0,26.0,8.0,33.0,42.0,22.0,37.0,14.0,9.0,15.0,60.0,79.0,67.0,147.0,41.0,45.0,35.0,33.0,24.0,38.0,14.0,19.0,147.0,25.0,141.0,45.0,33.0,175.0,26.0,43.0],
        [15.0,10.0,41.0,8.0,0.0,25.0,47.0,39.0,37.0,32.0,23.0,33.0,20.0,91.0,39.0,22.0,30.0,26.0,11.0,21.0,24.0,7.0,23.0,49.0,20.0,39.0,13.0,17.0,13.0,59.0,78.0,66.0,146.0,51.0,53.0,23.0,32.0,23.0,45.0,21.0,18.0,146.0,24.0,140.0,37.0,41.0,174.0,25.0,42.0],
        [26.0,31.0,46.0,22.0,25.0,0.0,37.0,39.0,51.0,62.0,56.0,59.0,41.0,77.0,30.0,39.0,29.0,43.0,14.0,5.0,32.0,28.0,40.0,33.0,21.0,25.0,37.0,30.0,38.0,50.0,69.0,57.0,137.0,39.0,33.0,38.0,49.0,44.0,49.0,9.0,42.0,137.0,45.0,131.0,59.0,16.0,165.0,46.0,63.0],
        [40.0,51.0,10.0,39.0,47.0,37.0,0.0,8.0,10.0,23.0,64.0,23.0,73.0,49.0,6.0,67.0,59.0,61.0,42.0,23.0,43.0,48.0,56.0,1.0,39.0,64.0,54.0,31.0,54.0,78.0,97.0,85.0,165.0,1.0,56.0,76.0,72.0,67.0,13.0,24.0,59.0,165.0,59.0,159.0,28.0,44.0,193.0,66.0,39.0],
        [50.0,43.0,2.0,32.0,39.0,39.0,8.0,0.0,2.0,15.0,56.0,16.0,56.0,52.0,18.0,55.0,65.0,59.0,36.0,40.0,59.0,40.0,65.0,9.0,55.0,69.0,46.0,24.0,47.0,86.0,105.0,93.0,173.0,12.0,64.0,67.0,65.0,58.0,7.0,32.0,51.0,173.0,57.0,167.0,20.0,52.0,201.0,59.0,32.0],
        [47.0,41.0,4.0,30.0,37.0,51.0,10.0,2.0,0.0,13.0,54.0,16.0,51.0,54.0,18.0,53.0,63.0,57.0,33.0,43.0,56.0,38.0,63.0,12.0,52.0,67.0,44.0,21.0,44.0,88.0,107.0,95.0,175.0,13.0,66.0,66.0,63.0,56.0,6.0,43.0,49.0,175.0,55.0,169.0,18.0,54.0,203.0,56.0,29.0],
        [47.0,42.0,16.0,37.0,32.0,62.0,23.0,15.0,13.0,0.0,55.0,1.0,52.0,67.0,32.0,54.0,63.0,58.0,43.0,52.0,56.0,39.0,53.0,24.0,52.0,71.0,45.0,25.0,46.0,91.0,110.0,98.0,178.0,26.0,79.0,55.0,64.0,55.0,22.0,51.0,50.0,178.0,56.0,172.0,5.0,67.0,206.0,57.0,16.0],
        [30.0,17.0,58.0,24.0,23.0,56.0,64.0,56.0,54.0,55.0,0.0,56.0,8.0,107.0,56.0,7.0,26.0,3.0,26.0,40.0,20.0,16.0,8.0,66.0,30.0,30.0,10.0,33.0,14.0,53.0,72.0,60.0,140.0,66.0,68.0,16.0,14.0,7.0,63.0,49.0,19.0,140.0,3.0,134.0,60.0,56.0,168.0,22.0,51.0],
        [50.0,45.0,20.0,38.0,33.0,59.0,23.0,16.0,16.0,1.0,56.0,0.0,56.0,68.0,29.0,55.0,66.0,64.0,44.0,56.0,62.0,42.0,56.0,27.0,55.0,67.0,51.0,29.0,49.0,92.0,111.0,99.0,179.0,28.0,79.0,55.0,65.0,56.0,28.0,57.0,56.0,179.0,59.0,173.0,11.0,67.0,207.0,63.0,22.0],
        [16.0,17.0,55.0,24.0,20.0,41.0,73.0,56.0,51.0,52.0,8.0,56.0,0.0,104.0,55.0,2.0,18.0,5.0,30.0,34.0,12.0,13.0,1.0,66.0,16.0,22.0,10.0,30.0,11.0,47.0,66.0,54.0,134.0,68.0,65.0,2.0,6.0,2.0,63.0,34.0,21.0,134.0,4.0,128.0,57.0,53.0,162.0,23.0,48.0],
        [89.0,93.0,54.0,84.0,91.0,77.0,49.0,52.0,54.0,67.0,107.0,68.0,104.0,0.0,55.0,106.0,98.0,108.0,81.0,72.0,92.0,91.0,103.0,48.0,88.0,102.0,97.0,75.0,97.0,127.0,146.0,134.0,214.0,49.0,105.0,105.0,110.0,106.0,59.0,73.0,102.0,214.0,107.0,208.0,72.0,93.0,242.0,109.0,83.0],
        [49.0,42.0,17.0,31.0,39.0,30.0,6.0,18.0,18.0,32.0,56.0,29.0,55.0,55.0,0.0,55.0,44.0,58.0,35.0,18.0,37.0,39.0,64.0,9.0,34.0,47.0,46.0,22.0,46.0,72.0,91.0,79.0,159.0,11.0,51.0,66.0,65.0,55.0,22.0,19.0,50.0,159.0,56.0,153.0,37.0,39.0,187.0,58.0,75.0],
        [20.0,16.0,58.0,23.0,22.0,39.0,67.0,55.0,53.0,54.0,7.0,55.0,2.0,106.0,55.0,0.0,20.0,4.0,32.0,35.0,14.0,15.0,3.0,68.0,18.0,26.0,9.0,32.0,13.0,49.0,68.0,56.0,136.0,59.0,67.0,4.0,8.0,4.0,63.0,36.0,20.0,136.0,2.0,130.0,59.0,55.0,164.0,23.0,50.0],
        [15.0,21.0,67.0,33.0,30.0,29.0,59.0,65.0,63.0,63.0,26.0,66.0,18.0,98.0,44.0,20.0,0.0,23.0,29.0,26.0,7.0,23.0,18.0,60.0,10.0,6.0,26.0,42.0,32.0,31.0,50.0,38.0,118.0,62.0,59.0,19.0,24.0,21.0,71.0,27.0,34.0,118.0,22.0,112.0,67.0,45.0,146.0,42.0,59.0],
        [21.0,20.0,61.0,27.0,26.0,43.0,61.0,59.0,57.0,58.0,3.0,64.0,5.0,108.0,58.0,4.0,23.0,0.0,34.0,37.0,23.0,19.0,12.0,79.0,20.0,27.0,13.0,36.0,17.0,52.0,71.0,59.0,139.0,80.0,69.0,7.0,12.0,4.0,67.0,38.0,16.0,139.0,6.0,133.0,63.0,57.0,167.0,19.0,54.0],
        [14.0,12.0,37.0,3.0,11.0,14.0,42.0,36.0,33.0,43.0,26.0,44.0,30.0,81.0,35.0,32.0,29.0,34.0,0.0,9.0,23.0,10.0,29.0,43.0,19.0,38.0,16.0,12.0,16.0,58.0,77.0,65.0,145.0,34.0,42.0,31.0,35.0,34.0,42.0,11.0,21.0,145.0,34.0,139.0,45.0,30.0,173.0,28.0,45.0],
        [17.0,22.0,41.0,13.0,21.0,5.0,23.0,40.0,43.0,52.0,40.0,56.0,34.0,72.0,18.0,35.0,26.0,37.0,9.0,0.0,20.0,19.0,33.0,24.0,16.0,37.0,25.0,22.0,26.0,55.0,74.0,62.0,142.0,27.0,33.0,33.0,44.0,36.0,35.0,1.0,30.0,142.0,36.0,136.0,55.0,21.0,170.0,37.0,54.0],
        [9.0,14.0,60.0,26.0,24.0,32.0,43.0,59.0,56.0,56.0,20.0,62.0,12.0,92.0,37.0,14.0,7.0,23.0,23.0,20.0,0.0,17.0,11.0,53.0,4.0,10.0,19.0,35.0,23.0,35.0,54.0,42.0,122.0,45.0,53.0,13.0,18.0,14.0,65.0,20.0,28.0,122.0,15.0,116.0,61.0,41.0,150.0,35.0,52.0],
        [8.0,3.0,42.0,8.0,7.0,28.0,48.0,40.0,38.0,39.0,16.0,42.0,13.0,91.0,39.0,15.0,23.0,19.0,10.0,19.0,17.0,0.0,17.0,49.0,13.0,27.0,6.0,17.0,6.0,52.0,71.0,59.0,139.0,50.0,52.0,18.0,25.0,16.0,45.0,21.0,11.0,139.0,17.0,133.0,44.0,40.0,167.0,18.0,35.0],
        [16.0,15.0,67.0,33.0,23.0,40.0,56.0,65.0,63.0,53.0,8.0,56.0,1.0,103.0,64.0,3.0,18.0,12.0,29.0,33.0,11.0,17.0,0.0,66.0,15.0,22.0,8.0,42.0,12.0,46.0,65.0,53.0,133.0,75.0,64.0,2.0,7.0,3.0,73.0,34.0,22.0,133.0,4.0,127.0,60.0,52.0,161.0,23.0,49.0],
        [50.0,54.0,8.0,42.0,49.0,33.0,1.0,9.0,12.0,24.0,66.0,27.0,66.0,48.0,9.0,68.0,60.0,79.0,43.0,24.0,53.0,49.0,66.0,0.0,40.0,57.0,55.0,32.0,56.0,79.0,98.0,86.0,166.0,1.0,57.0,67.0,75.0,59.0,12.0,34.0,61.0,166.0,69.0,160.0,29.0,45.0,194.0,67.0,40.0],
        [5.0,10.0,57.0,22.0,20.0,21.0,39.0,55.0,52.0,52.0,30.0,55.0,16.0,88.0,34.0,18.0,10.0,20.0,19.0,16.0,4.0,13.0,15.0,40.0,0.0,14.0,17.0,31.0,19.0,39.0,58.0,46.0,126.0,41.0,49.0,17.0,36.0,18.0,60.0,17.0,24.0,126.0,19.0,120.0,57.0,37.0,154.0,31.0,48.0],
        [19.0,27.0,73.0,37.0,39.0,25.0,64.0,69.0,67.0,71.0,30.0,67.0,22.0,102.0,47.0,26.0,6.0,27.0,38.0,37.0,10.0,27.0,22.0,57.0,14.0,0.0,31.0,50.0,36.0,25.0,44.0,32.0,112.0,63.0,58.0,23.0,30.0,26.0,75.0,31.0,38.0,112.0,26.0,106.0,71.0,41.0,140.0,59.0,67.0],
        [12.0,7.0,48.0,14.0,13.0,37.0,54.0,46.0,44.0,45.0,10.0,51.0,10.0,97.0,46.0,9.0,26.0,13.0,16.0,25.0,19.0,6.0,8.0,55.0,17.0,31.0,0.0,23.0,4.0,54.0,73.0,61.0,141.0,56.0,58.0,10.0,19.0,10.0,53.0,26.0,17.0,141.0,11.0,135.0,50.0,46.0,169.0,32.0,41.0],
        [27.0,20.0,25.0,9.0,17.0,30.0,31.0,24.0,21.0,25.0,33.0,29.0,30.0,75.0,22.0,32.0,42.0,36.0,12.0,22.0,35.0,17.0,42.0,32.0,31.0,50.0,23.0,0.0,23.0,69.0,88.0,76.0,156.0,33.0,54.0,43.0,42.0,35.0,31.0,22.0,28.0,156.0,34.0,150.0,30.0,42.0,184.0,35.0,52.0],
        [15.0,9.0,49.0,15.0,13.0,38.0,54.0,47.0,44.0,46.0,14.0,49.0,11.0,97.0,46.0,13.0,32.0,17.0,16.0,26.0,23.0,6.0,12.0,56.0,19.0,36.0,4.0,23.0,0.0,58.0,77.0,65.0,145.0,58.0,58.0,13.0,23.0,13.0,52.0,27.0,18.0,145.0,17.0,139.0,50.0,46.0,173.0,25.0,41.0],
        [44.0,49.0,87.0,60.0,59.0,50.0,78.0,86.0,88.0,91.0,53.0,92.0,47.0,127.0,72.0,49.0,31.0,52.0,58.0,55.0,35.0,52.0,46.0,79.0,39.0,25.0,54.0,69.0,58.0,0.0,69.0,57.0,137.0,79.0,83.0,48.0,53.0,49.0,90.0,55.0,63.0,137.0,50.0,131.0,96.0,66.0,165.0,69.0,87.0],
        [63.0,68.0,106.0,79.0,78.0,69.0,97.0,105.0,107.0,110.0,72.0,111.0,66.0,146.0,91.0,68.0,50.0,71.0,77.0,74.0,54.0,71.0,65.0,98.0,58.0,44.0,73.0,88.0,77.0,69.0,0.0,76.0,156.0,98.0,102.0,67.0,72.0,68.0,109.0,74.0,82.0,156.0,69.0,150.0,115.0,85.0,184.0,88.0,106.0],
        [51.0,56.0,94.0,67.0,66.0,57.0,85.0,93.0,95.0,98.0,60.0,99.0,54.0,134.0,79.0,56.0,38.0,59.0,65.0,62.0,42.0,59.0,53.0,86.0,46.0,32.0,61.0,76.0,65.0,57.0,76.0,0.0,144.0,86.0,90.0,55.0,60.0,56.0,97.0,62.0,70.0,144.0,57.0,138.0,103.0,73.0,172.0,76.0,94.0],
        [131.0,136.0,174.0,147.0,146.0,137.0,165.0,173.0,175.0,178.0,140.0,179.0,134.0,214.0,159.0,136.0,118.0,139.0,145.0,142.0,122.0,139.0,133.0,166.0,126.0,112.0,141.0,156.0,145.0,137.0,156.0,144.0,0.0,166.0,170.0,135.0,140.0,136.0,177.0,142.0,150.0,55.0,137.0,61.0,183.0,155.0,35.0,156.0,174.0],
        [42.0,55.0,9.0,41.0,51.0,39.0,1.0,12.0,13.0,26.0,66.0,28.0,68.0,49.0,11.0,59.0,62.0,80.0,34.0,27.0,45.0,50.0,75.0,1.0,41.0,63.0,56.0,33.0,58.0,79.0,98.0,86.0,166.0,0.0,57.0,68.0,77.0,71.0,14.0,27.0,61.0,166.0,70.0,160.0,30.0,45.0,194.0,69.0,41.0],
        [50.0,54.0,65.0,45.0,53.0,33.0,56.0,64.0,66.0,79.0,68.0,79.0,65.0,105.0,51.0,67.0,59.0,69.0,42.0,33.0,53.0,52.0,64.0,57.0,49.0,58.0,58.0,54.0,58.0,83.0,102.0,90.0,170.0,57.0,0.0,66.0,71.0,67.0,68.0,34.0,63.0,170.0,68.0,164.0,84.0,17.0,198.0,70.0,87.0],
        [18.0,19.0,68.0,35.0,23.0,38.0,76.0,67.0,66.0,55.0,16.0,55.0,2.0,105.0,66.0,4.0,19.0,7.0,31.0,33.0,13.0,18.0,2.0,67.0,17.0,23.0,10.0,43.0,13.0,48.0,67.0,55.0,135.0,68.0,66.0,0.0,8.0,5.0,71.0,35.0,23.0,135.0,6.0,129.0,59.0,54.0,163.0,33.0,51.0],
        [31.0,26.0,67.0,33.0,32.0,49.0,72.0,65.0,63.0,64.0,14.0,65.0,6.0,110.0,65.0,8.0,24.0,12.0,35.0,44.0,18.0,25.0,7.0,75.0,36.0,30.0,19.0,42.0,23.0,53.0,72.0,60.0,140.0,77.0,71.0,8.0,0.0,8.0,70.0,45.0,36.0,140.0,10.0,134.0,69.0,59.0,168.0,30.0,60.0],
        [20.0,17.0,58.0,24.0,23.0,44.0,67.0,58.0,56.0,55.0,7.0,56.0,2.0,106.0,55.0,4.0,21.0,4.0,34.0,36.0,14.0,16.0,3.0,59.0,18.0,26.0,10.0,35.0,13.0,49.0,68.0,56.0,136.0,71.0,67.0,5.0,8.0,0.0,62.0,35.0,20.0,136.0,2.0,130.0,59.0,55.0,164.0,23.0,53.0],
        [55.0,49.0,5.0,38.0,45.0,49.0,13.0,7.0,6.0,22.0,63.0,28.0,63.0,59.0,22.0,63.0,71.0,67.0,42.0,35.0,65.0,45.0,73.0,12.0,60.0,75.0,53.0,31.0,52.0,90.0,109.0,97.0,177.0,14.0,68.0,71.0,70.0,62.0,0.0,38.0,58.0,177.0,62.0,171.0,27.0,56.0,205.0,65.0,38.0],
        [18.0,23.0,43.0,14.0,21.0,9.0,24.0,32.0,43.0,51.0,49.0,57.0,34.0,73.0,19.0,36.0,27.0,38.0,11.0,1.0,20.0,21.0,34.0,34.0,17.0,31.0,26.0,22.0,27.0,55.0,74.0,62.0,142.0,27.0,34.0,35.0,45.0,35.0,38.0,0.0,31.0,142.0,37.0,136.0,53.0,22.0,170.0,38.0,56.0],
        [19.0,14.0,53.0,19.0,18.0,42.0,59.0,51.0,49.0,50.0,19.0,56.0,21.0,102.0,50.0,20.0,34.0,16.0,21.0,30.0,28.0,11.0,22.0,61.0,24.0,38.0,17.0,28.0,18.0,63.0,82.0,70.0,150.0,61.0,63.0,23.0,36.0,20.0,58.0,31.0,0.0,150.0,17.0,144.0,55.0,51.0,178.0,7.0,46.0],
        [131.0,136.0,174.0,147.0,146.0,137.0,165.0,173.0,175.0,178.0,140.0,179.0,134.0,214.0,159.0,136.0,118.0,139.0,145.0,142.0,122.0,139.0,133.0,166.0,126.0,112.0,141.0,156.0,145.0,137.0,156.0,144.0,55.0,166.0,170.0,135.0,140.0,136.0,177.0,142.0,150.0,0.0,137.0,6.0,183.0,156.0,30.0,156.0,174.0],
        [20.0,18.0,59.0,25.0,24.0,45.0,59.0,57.0,55.0,56.0,3.0,59.0,4.0,107.0,56.0,2.0,22.0,6.0,34.0,36.0,15.0,17.0,4.0,69.0,19.0,26.0,11.0,34.0,17.0,50.0,69.0,57.0,137.0,70.0,68.0,6.0,10.0,2.0,62.0,37.0,17.0,137.0,0.0,131.0,61.0,56.0,165.0,19.0,52.0],
        [125.0,130.0,168.0,141.0,140.0,131.0,159.0,167.0,169.0,172.0,134.0,173.0,128.0,208.0,153.0,130.0,112.0,133.0,139.0,136.0,116.0,133.0,127.0,160.0,120.0,106.0,135.0,150.0,139.0,131.0,150.0,138.0,61.0,160.0,164.0,129.0,134.0,130.0,171.0,136.0,144.0,6.0,131.0,0.0,177.0,150.0,34.0,150.0,168.0],
        [52.0,47.0,22.0,45.0,37.0,59.0,28.0,20.0,18.0,5.0,60.0,11.0,57.0,72.0,37.0,59.0,67.0,63.0,45.0,55.0,61.0,44.0,60.0,29.0,57.0,71.0,50.0,30.0,50.0,96.0,115.0,103.0,183.0,30.0,84.0,59.0,69.0,59.0,27.0,53.0,55.0,183.0,61.0,177.0,0.0,72.0,211.0,62.0,12.0],
        [38.0,42.0,53.0,33.0,41.0,16.0,44.0,52.0,54.0,67.0,56.0,67.0,53.0,93.0,39.0,55.0,45.0,57.0,30.0,21.0,41.0,40.0,52.0,45.0,37.0,41.0,46.0,42.0,46.0,66.0,85.0,73.0,155.0,45.0,17.0,54.0,59.0,55.0,56.0,22.0,51.0,156.0,56.0,150.0,72.0,0.0,181.0,58.0,75.0],
        [159.0,164.0,202.0,175.0,174.0,165.0,193.0,201.0,203.0,206.0,168.0,207.0,162.0,242.0,187.0,164.0,146.0,167.0,173.0,170.0,150.0,167.0,161.0,194.0,154.0,140.0,169.0,184.0,173.0,165.0,184.0,172.0,35.0,194.0,198.0,163.0,168.0,164.0,205.0,170.0,178.0,30.0,165.0,34.0,211.0,181.0,0.0,184.0,202.0],
        [26.0,21.0,60.0,26.0,25.0,46.0,66.0,59.0,56.0,57.0,22.0,63.0,23.0,109.0,58.0,23.0,42.0,19.0,28.0,37.0,35.0,18.0,23.0,67.0,31.0,59.0,32.0,35.0,25.0,69.0,88.0,76.0,156.0,69.0,70.0,33.0,30.0,23.0,65.0,38.0,7.0,156.0,19.0,150.0,62.0,58.0,184.0,0.0,53.0],
        [43.0,38.0,33.0,43.0,42.0,63.0,39.0,32.0,29.0,16.0,51.0,22.0,48.0,83.0,75.0,50.0,59.0,54.0,45.0,54.0,52.0,35.0,49.0,40.0,48.0,67.0,41.0,52.0,41.0,87.0,106.0,94.0,174.0,41.0,87.0,51.0,60.0,53.0,38.0,56.0,46.0,174.0,52.0,168.0,12.0,75.0,202.0,53.0,0.0]]
            ind = [34, 6, 9, 13, 21, 25, 29, 30, 31, 45, 33, 44, 47, 5, 2, 11, 22, 16, 0, 1, 41, 32, 46]
            ctlindDict = {2: [21, 41, 7, 32, 13, 46, 30, 34], 3: [21, 41, 6, 32, 13, 46, 30, 34, 43, 9, 31, 44], 4: [21, 41, 6, 32, 13, 46, 30, 34, 43, 9, 31, 44, 25, 48, 29, 2], 5: [12, 41, 6, 32, 13, 46, 30, 34, 43, 9, 31, 44, 20, 48, 29, 7, 40, 47, 38, 19, 11], 6: [12, 41, 6, 32, 13, 46, 30, 34, 43, 9, 31, 44, 20, 48, 29, 7, 21, 40, 38, 18, 11, 45, 36, 47, 2]}
            # ctlind = [12, 41, 6, 32, 13, 46, 30, 34, 43, 9, 31, 44, 20, 48, 29, 7, 21, 40, 38, 18, 11, 45, 36, 47, 2, 33, 10, 23, 17, 8]


        elif num == 1:  # Europe + Asia + Africa + Pacific
            print("================ Europe + Asia + Africa + Pacific =================")
            latency_matrix =[
            [0.0, 11.0, 16.0, 18.0, 16.0, 28.0, 22.0, 31.0, 37.0, 37.0, 34.0, 34.0, 39.0, 194.0, 190.0, 215.0, 269.0, 242.0, 291.0, 316.0, 179.0, 196.0, 161.0, 151.0, 139.0, 38.0, 308.0, 165.0, 195.0, 157.0, 59.0, 249.0, 215.0],
            [11.0, 0.0, 6.0, 7.0, 5.0, 17.0, 11.0, 18.0, 27.0, 23.0, 23.0, 24.0, 28.0, 183.0, 179.0, 204.0, 258.0, 231.0, 280.0, 305.0, 168.0, 185.0, 150.0, 140.0, 128.0, 28.0, 297.0, 154.0, 184.0, 146.0, 49.0, 238.0, 204.0],
            [16.0, 6.0, 0.0, 15.0, 4.0, 14.0, 6.0, 13.0, 20.0, 19.0, 20.0, 24.0, 26.0, 189.0, 185.0, 210.0, 264.0, 237.0, 286.0, 311.0, 174.0, 191.0, 156.0, 146.0, 134.0, 21.0, 303.0, 160.0, 190.0, 152.0, 45.0, 244.0, 210.0],
            [18.0, 7.0, 15.0, 0.0, 13.0, 10.0, 20.0, 25.0, 35.0, 32.0, 16.0, 16.0, 21.0, 190.0, 186.0, 211.0, 260.0, 230.0, 287.0, 312.0, 175.0, 192.0, 157.0, 147.0, 135.0, 35.0, 304.0, 161.0, 191.0, 153.0, 55.0, 237.0, 211.0],
            [16.0, 5.0, 4.0, 13.0, 0.0, 18.0, 10.0, 16.0, 24.0, 22.0, 24.0, 28.0, 29.0, 188.0, 184.0, 209.0, 263.0, 236.0, 285.0, 310.0, 173.0, 190.0, 155.0, 145.0, 133.0, 25.0, 302.0, 159.0, 189.0, 151.0, 45.0, 243.0, 209.0],
            [28.0, 17.0, 14.0, 10.0, 18.0, 0.0, 8.0, 15.0, 22.0, 21.0, 6.0, 10.0, 11.0, 200.0, 196.0, 221.0, 270.0, 240.0, 297.0, 322.0, 185.0, 202.0, 167.0, 157.0, 145.0, 24.0, 314.0, 171.0, 201.0, 163.0, 47.0, 247.0,221.0],
            [22.0, 11.0, 6.0, 20.0, 10.0, 8.0, 0.0, 7.0, 14.0, 13.0, 14.0, 18.0, 20.0, 194.0, 190.0, 215.0, 269.0, 242.0, 291.0, 316.0, 179.0, 196.0, 161.0, 151.0, 139.0, 15.0, 308.0, 165.0, 195.0, 157.0, 35.0, 249.0, 215.0],
            [31.0, 18.0, 13.0, 25.0, 16.0, 15.0, 7.0, 0.0, 7.0, 7.0, 21.0, 25.0, 26.0, 201.0, 197.0, 222.0, 276.0, 249.0, 298.0, 323.0, 186.0, 203.0, 168.0, 158.0, 146.0, 22.0, 315.0, 172.0, 202.0, 164.0, 30.0, 256.0, 222.0],
            [37.0, 27.0, 20.0, 35.0, 24.0, 22.0, 14.0, 7.0, 0.0, 7.0, 28.0, 32.0, 33.0, 208.0, 204.0, 229.0, 283.0, 256.0, 305.0, 330.0, 193.0, 210.0, 175.0, 165.0, 153.0, 29.0, 322.0, 179.0, 209.0, 171.0, 41.0, 263.0, 229.0],
            [37.0, 23.0, 19.0, 32.0, 22.0, 21.0, 13.0, 7.0, 7.0, 0.0, 27.0, 31.0, 32.0, 206.0, 202.0, 227.0, 281.0, 254.0, 303.0, 328.0, 191.0, 208.0, 173.0, 163.0, 151.0, 28.0, 320.0, 177.0, 207.0, 169.0, 38.0, 261.0,227.0],
            [34.0, 23.0, 20.0, 16.0, 24.0, 6.0, 14.0, 21.0, 28.0, 27.0, 0.0, 4.0, 17.0, 206.0, 202.0, 227.0, 276.0, 246.0, 303.0, 328.0, 191.0, 208.0, 173.0, 163.0, 151.0, 30.0, 320.0, 177.0, 207.0, 169.0, 53.0, 253.0, 227.0],
            [34.0, 24.0, 24.0, 16.0, 28.0, 10.0, 18.0, 25.0, 32.0, 31.0, 4.0, 0.0, 21.0, 206.0, 202.0, 227.0, 276.0, 246.0, 303.0, 328.0, 191.0, 208.0, 173.0, 163.0, 151.0, 33.0, 320.0, 177.0, 207.0, 169.0, 57.0, 253.0, 227.0],
            [39.0, 28.0, 26.0, 21.0, 29.0, 11.0, 20.0, 26.0, 33.0, 32.0, 17.0, 21.0, 0.0, 211.0, 207.0, 232.0, 281.0, 251.0, 308.0, 333.0, 196.0, 213.0, 178.0, 168.0, 156.0, 22.0, 325.0, 182.0, 212.0, 174.0, 55.0, 258.0,232.0],
            [194.0, 183.0, 189.0, 190.0, 188.0, 200.0, 194.0, 201.0, 208.0, 206.0, 206.0, 206.0, 211.0, 0.0, 35.0, 21.0, 75.0, 48.0, 136.0, 161.0, 351.0, 25.0, 106.0, 74.0, 87.0, 209.0, 153.0, 81.0, 40.0, 69.0, 229.0, 55.0,52.0],
            [190.0, 179.0, 185.0, 186.0, 184.0, 196.0, 190.0, 197.0, 204.0, 202.0, 202.0, 202.0, 207.0, 35.0, 0.0, 56.0, 110.0, 78.0, 101.0, 126.0, 347.0, 60.0, 72.0, 41.0, 51.0, 205.0, 118.0, 45.0, 5.0, 34.0, 225.0, 89.0,25.0],
            [215.0, 204.0, 210.0, 211.0, 209.0, 221.0, 215.0, 222.0, 229.0, 227.0, 227.0, 227.0, 232.0, 21.0, 56.0, 0.0, 60.0, 30.0, 157.0, 182.0, 372.0, 47.0, 131.0, 96.0, 115.0, 230.0, 174.0, 102.0, 61.0, 90.0, 250.0, 36.0,74.0],
            [269.0, 258.0, 264.0, 260.0, 263.0, 270.0, 269.0, 276.0, 283.0, 281.0, 276.0, 276.0, 281.0, 75.0, 110.0, 60.0, 0.0, 30.0, 209.0, 234.0, 426.0, 101.0, 182.0, 151.0, 166.0, 284.0, 226.0, 155.0, 115.0, 145.0, 304.0, 37.0, 127.0],
            [242.0, 231.0, 237.0, 230.0, 236.0, 240.0, 242.0, 249.0, 256.0, 254.0, 246.0, 246.0, 251.0, 48.0, 78.0, 30.0, 30.0, 0.0, 179.0, 204.0, 399.0, 52.0, 155.0, 121.0, 139.0, 257.0, 196.0, 129.0, 88.0, 116.0, 277.0, 7.0, 100.0],
            [291.0, 280.0, 286.0, 287.0, 285.0, 297.0, 291.0, 298.0, 305.0, 303.0, 303.0, 303.0, 308.0, 136.0, 101.0,157.0, 209.0, 179.0, 0.0, 25.0, 448.0, 161.0, 173.0, 141.0, 152.0, 306.0, 17.0, 146.0, 106.0, 135.0, 326.0, 186.0, 126.0],
            [316.0, 305.0, 311.0, 312.0, 310.0, 322.0, 316.0, 323.0, 330.0, 328.0, 328.0, 328.0, 333.0, 161.0, 126.0, 182.0, 234.0, 204.0, 25.0, 0.0, 473.0, 186.0, 198.0, 166.0, 177.0, 331.0, 42.0, 171.0, 131.0, 160.0, 351.0, 211.0, 151.0],
            [179.0, 168.0, 174.0, 175.0, 173.0, 185.0, 179.0, 186.0, 193.0, 191.0, 191.0, 191.0, 196.0, 351.0, 347.0,372.0, 426.0, 399.0, 448.0, 473.0, 0.0, 353.0, 318.0, 308.0, 296.0, 194.0, 465.0, 322.0, 352.0, 314.0,214.0, 406.0, 372.0],
            [196.0, 185.0, 191.0, 192.0, 190.0, 202.0, 196.0, 203.0, 210.0, 208.0, 208.0, 208.0, 213.0, 25.0, 60.0,47.0, 101.0, 52.0, 161.0, 186.0, 353.0, 0.0, 133.0, 45.0, 121.0, 211.0, 178.0, 109.0, 66.0, 93.0, 231.0, 57.0, 78.0],
            [161.0, 150.0, 156.0, 157.0, 155.0, 167.0, 161.0, 168.0, 175.0, 173.0, 173.0, 173.0, 178.0, 106.0, 72.0, 131.0, 182.0, 155.0, 173.0, 198.0, 318.0, 133.0, 0.0, 44.0, 22.0, 176.0, 190.0, 50.0, 76.0, 40.0, 196.0,160.0, 95.0],
            [151.0, 140.0, 146.0, 147.0, 145.0, 157.0, 151.0, 158.0, 165.0, 163.0, 163.0, 163.0, 168.0, 74.0, 41.0, 96.0, 151.0, 121.0, 141.0, 166.0, 308.0, 45.0, 44.0, 0.0, 12.0, 166.0, 158.0, 14.0, 45.0, 6.0, 186.0, 131.0, 64.0],
            [139.0, 128.0, 134.0, 135.0, 133.0, 145.0, 139.0, 146.0, 153.0, 151.0, 151.0, 151.0, 156.0, 87.0, 51.0,115.0, 166.0, 139.0, 152.0, 177.0, 296.0, 121.0, 22.0, 12.0, 0.0, 154.0, 169.0, 26.0, 63.0, 22.0, 174.0,145.0, 81.0],
            [38.0, 28.0, 21.0, 35.0, 25.0, 24.0, 15.0, 22.0, 29.0, 28.0, 30.0, 33.0, 22.0, 209.0, 205.0, 230.0, 284.0,257.0, 306.0, 331.0, 194.0, 211.0, 176.0, 166.0, 154.0, 0.0, 323.0, 180.0, 210.0, 172.0, 51.0, 264.0,230.0],
            [308.0, 297.0, 303.0, 304.0, 302.0, 314.0, 308.0, 315.0, 322.0, 320.0, 320.0, 320.0, 325.0, 153.0, 118.0, 174.0, 226.0, 196.0, 17.0, 42.0, 465.0, 178.0, 190.0, 158.0, 169.0, 323.0, 0.0, 163.0, 123.0, 152.0, 343.0, 203.0, 143.0],
            [165.0, 154.0, 160.0, 161.0, 159.0, 171.0, 165.0, 172.0, 179.0, 177.0, 177.0, 177.0, 182.0, 81.0, 45.0, 102.0, 155.0, 129.0, 146.0, 171.0, 322.0, 109.0, 50.0, 14.0, 26.0, 180.0, 163.0, 0.0, 49.0, 12.0, 200.0, 136.0, 70.0],
            [195.0, 184.0, 190.0, 191.0, 189.0, 201.0, 195.0, 202.0, 209.0, 207.0, 207.0, 207.0, 212.0, 40.0, 5.0, 61.0,115.0, 88.0, 106.0, 131.0, 352.0, 66.0, 76.0, 45.0, 63.0, 210.0, 123.0, 49.0, 0.0, 40.0, 230.0, 96.0, 31.0],
            [157.0, 146.0, 152.0, 153.0, 151.0, 163.0, 157.0, 164.0, 171.0, 169.0, 169.0, 169.0, 174.0, 69.0, 34.0, 90.0, 145.0, 116.0, 135.0, 160.0, 314.0, 93.0, 40.0, 6.0, 22.0, 172.0, 152.0, 12.0, 40.0, 0.0, 192.0, 123.0, 60.0],
            [59.0, 49.0, 45.0, 55.0, 45.0, 47.0, 35.0, 30.0, 41.0, 38.0, 53.0, 57.0, 55.0, 229.0, 225.0, 250.0, 304.0, 277.0, 326.0, 351.0, 214.0, 231.0, 196.0, 186.0, 174.0, 51.0, 343.0, 200.0, 230.0, 192.0, 0.0, 284.0, 250.0],
            [249.0, 238.0, 244.0, 237.0, 243.0, 247.0, 249.0, 256.0, 263.0, 261.0, 253.0, 253.0, 258.0, 55.0, 89.0, 36.0, 37.0, 7.0, 186.0, 211.0, 406.0, 57.0, 160.0, 131.0, 145.0, 264.0, 203.0, 136.0, 96.0, 123.0, 284.0, 0.0, 107.0],
            [215.0, 204.0, 210.0, 211.0, 209.0, 221.0, 215.0, 222.0, 229.0, 227.0, 227.0, 227.0, 232.0, 52.0, 25.0, 74.0, 127.0, 100.0, 126.0, 151.0, 372.0, 78.0, 95.0, 64.0, 81.0, 230.0, 143.0, 70.0, 31.0, 60.0, 250.0, 107.0, 0.0]]

            ind = [0, 30, 6, 3, 1, 7, 8, 13, 29, 32, 14, 22, 17, 16, 15, 18, 19, 26, 20]
            # ctlind = [6, 29, 20, 18, 13, 19, 30, 16, 26, 12, 17, 25]
            ctlindDict = {2: [6, 29, 20, 18, 17, 19], 3: [6, 29, 20, 18, 15, 19, 30, 16], 4: [6, 29, 20, 18, 13, 19, 30, 16, 26, 12, 17]}

        elif num == 2:  # Europe + Africa network
            print("================ Europe + Africa =================")
            latency_matrix = [
                [0.0, 11.0, 16.0, 18.0, 16.0, 28.0, 22.0, 31.0, 37.0, 37.0, 34.0, 34.0, 39.0, 179.0, 38.0, 59.0],
                 [11.0, 0.0, 6.0, 7.0, 5.0, 17.0, 11.0, 18.0, 27.0, 23.0, 23.0, 24.0, 28.0, 168.0, 28.0, 49.0],
                 [16.0, 6.0, 0.0, 15.0, 4.0, 14.0, 6.0, 13.0, 20.0, 19.0, 20.0, 24.0, 26.0, 174.0, 21.0, 45.0],
                 [18.0, 7.0, 15.0, 0.0, 13.0, 10.0, 20.0, 25.0, 35.0, 32.0, 16.0, 16.0, 21.0, 175.0, 35.0, 55.0],
                 [16.0, 5.0, 4.0, 13.0, 0.0, 18.0, 10.0, 16.0, 24.0, 22.0, 24.0, 28.0, 29.0, 173.0, 25.0, 45.0],
                 [28.0, 17.0, 14.0, 10.0, 18.0, 0.0, 8.0, 15.0, 22.0, 21.0, 6.0, 10.0, 11.0, 185.0, 24.0, 47.0],
                 [22.0, 11.0, 6.0, 20.0, 10.0, 8.0, 0.0, 7.0, 14.0, 13.0, 14.0, 18.0, 20.0, 179.0, 15.0, 35.0],
                 [31.0, 18.0, 13.0, 25.0, 16.0, 15.0, 7.0, 0.0, 7.0, 7.0, 21.0, 25.0, 26.0, 186.0, 22.0, 30.0],
                 [37.0, 27.0, 20.0, 35.0, 24.0, 22.0, 14.0, 7.0, 0.0, 7.0, 28.0, 32.0, 33.0, 193.0, 29.0, 41.0],
                 [37.0, 23.0, 19.0, 32.0, 22.0, 21.0, 13.0, 7.0, 7.0, 0.0, 27.0, 31.0, 32.0, 191.0, 28.0, 38.0],
                 [34.0, 23.0, 20.0, 16.0, 24.0, 6.0, 14.0, 21.0, 28.0, 27.0, 0.0, 4.0, 17.0, 191.0, 30.0, 53.0],
                 [34.0, 24.0, 24.0, 16.0, 28.0, 10.0, 18.0, 25.0, 32.0, 31.0, 4.0, 0.0, 21.0, 191.0, 33.0, 57.0],
                 [39.0, 28.0, 26.0, 21.0, 29.0, 11.0, 20.0, 26.0, 33.0, 32.0, 17.0, 21.0, 0.0, 196.0, 22.0, 55.0],
                 [179.0, 168.0, 174.0, 175.0, 173.0, 185.0, 179.0, 186.0, 193.0, 191.0, 191.0, 191.0, 196.0, 0.0, 194.0, 214.0],
                 [38.0, 28.0, 21.0, 35.0, 25.0, 24.0, 15.0, 22.0, 29.0, 28.0, 30.0, 33.0, 22.0, 194.0, 0.0, 51.0],
                 [59.0, 49.0, 45.0, 55.0, 45.0, 47.0, 35.0, 30.0, 41.0, 38.0, 53.0, 57.0, 55.0, 214.0, 51.0, 0.0]]
            ind = [0, 6, 13, 15, 3, 1, 7, 8]
            # ctlind = [1, 13, 15, 12, 0, 5, 14, 7, 11]
            ctlindDict = {5: [6, 13, 15, 12, 0, 10, 14], 6: [2, 13, 15, 12, 0, 10, 14, 8]}

        elif num == 3:  # Asia network
            print("================ Asia =================")
            latency_matrix = [[0.0,35.0,21.0,75.0,48.0,25.0,106.0,74.0,87.0,81.0,40.0,69.0,55.0,52.0],
        [35.0,0.0,56.0,110.0,78.0,60.0,72.0,41.0,51.0,45.0,5.0,34.0,89.0,25.0],
        [21.0,56.0,0.0,60.0,30.0,47.0,131.0,96.0,115.0,102.0,61.0,90.0,36.0,74.0],
        [75.0,110.0,60.0,0.0,30.0,101.0,182.0,151.0,166.0,155.0,115.0,145.0,37.0,127.0],
        [48.0,78.0,30.0,30.0,0.0,52.0,155.0,121.0,139.0,129.0,88.0,116.0,7.0,100.0],
        [25.0,60.0,47.0,101.0,52.0,0.0,133.0,45.0,121.0,109.0,66.0,93.0,57.0,78.0],
        [106.0,72.0,131.0,182.0,155.0,133.0,0.0,44.0,22.0,50.0,76.0,40.0,160.0,95.0],
        [74.0,41.0,96.0,151.0,121.0,45.0,44.0,0.0,12.0,14.0,45.0,6.0,131.0,64.0],
        [87.0,51.0,115.0,166.0,139.0,121.0,22.0,12.0,0.0,26.0,63.0,22.0,145.0,81.0],
        [81.0,45.0,102.0,155.0,129.0,109.0,50.0,14.0,26.0,0.0,49.0,12.0,136.0,70.0],
        [40.0,5.0,61.0,115.0,88.0,66.0,76.0,45.0,63.0,49.0,0.0,40.0,96.0,31.0],
        [69.0,34.0,90.0,145.0,116.0,93.0,40.0,6.0,22.0,12.0,40.0,0.0,123.0,60.0],
        [55.0,89.0,36.0,37.0,7.0,57.0,160.0,131.0,145.0,136.0,96.0,123.0,0.0,107.0],
        [52.0,25.0,74.0,127.0,100.0,78.0,95.0,64.0,81.0,70.0,31.0,60.0,107.0,0.0]]
            ind = [0, 11, 13, 1, 6, 2, 3, 4]
            # ctlind = [1, 4, 6, 3, 11, 0, 8, 12, 13]
            ctlindDict = {5: [1, 4, 6, 3, 11], 6: [1, 4, 6, 3, 11, 0, 8]}

        elif num == 4:  # New Zealand
            print("================ Pacific =================")
            latency_matrix = [[0.0, 25.0, 17.0],
                              [25.0, 0.0, 42.0],
                              [17.0, 42.0, 0.0]]
            ind = [0, 1, 2]
            # ctlind = [0, 1, 2]
            ctlindDict = {5: [0, 1], 6: [0, 1]}

        else:
            print("environment does not exist")

        capacity = np.array([6000] * len(latency_matrix))
        ind = sorted(ind)
        capacity[ind] = 9000

        candidate = np.array([0] * len(latency_matrix))
        ctlind = sorted(ctlindDict[arrRate])
        candidate[ctlind] = 1
        self.ctlRate = capacity[ctlind]

        self.ctlNum = sum(candidate)
        self.schNum = 1  #
        self.swNum = len(candidate)

        latency = np.multiply(latency_matrix, 0.5 * 1e-3)
        self.sw2schLink = latency[sch_loc]
        self.sch2ctlLink = latency[sch_loc][ctlind]

        self.pktRate = [610 * arrRate] * self.swNum
        self.noPktbyCtl = [0] * self.ctlNum
        self.avgCtlRespTime = [0.] * self.ctlNum



        # print("number of controllers: %s" % self.ctlNum)
        # print("control plane capacity: %s" % sum(self.ctlRate))

        # self.def_resp_t = self.default_response_time()  # theoretically fastest response time for each controller: each controller is a row vector, and each column represents a switch/scheduler

    def latency_generator(self, intra_laten_range, inter_laten_dev, candidate):
        ctlNum = len(candidate)
        intra_pod_laten = np.random.choice(range(intra_laten_range[0], intra_laten_range[-1]), ctlNum)
        # intra_pod_laten = [round(_ * 1e-6, 6) for _ in intra_pod_laten]

        inter_pod_laten = np.random.choice(range(inter_laten_dev[0], inter_laten_dev[-1]),
                                           ctlNum * (ctlNum - 1) // 2)
        inter_pod_laten = np.ndarray.tolist(inter_pod_laten)
        # inter_pod_laten = [round(_ * 1e-6, 6) for _ in inter_pod_laten]
        loc = -1

        latency_matrix = np.zeros([ctlNum, ctlNum])
        for i in range(ctlNum):
            temp = intra_pod_laten[i]
            for j in range(i + 1, ctlNum):
                loc += 1
                latency_matrix[i][j] = round((temp + inter_pod_laten[loc]) * 1e-6, 6)
        latency_matrix += np.transpose(latency_matrix)
        for i in range(ctlNum):
            latency_matrix[i][i] = round(intra_pod_laten[i] * 1e-6, 6)

        latency_dict = {}
        temp = 0
        for i in range(ctlNum):
            if candidate[i] == 0:
                continue
            else:
                latency_dict[temp] = []
                latency_dict[temp] = np.ndarray.tolist(latency_matrix[i])
                temp += 1
        return latency_dict

    def default_response_time(self):
        proct = [1.0 / x for x in self.ctlRate]
        proct = np.array(proct).reshape((self.ctlNum, 1))
        laten = []
        for i in range(self.ctlNum):
            laten.append([])
            laten[i] = self.sch2ctlLink[i]
        laten = np.multiply(laten, 2)
        respt = np.add(laten, proct)
        return respt

    def update_noPktbyCtl(self, updatelist):
        # updatelist= [Num.Pkt_Processed_by_Ctl0, ... ]
        self.noPktbyCtl = [x + y for x, y in zip(self.noPktbyCtl, updatelist)]

    def update_avgCtlRespTime(self, updatelist):
        self.avgCtlRespTime = [x + y for x, y in zip(self.avgCtlRespTime, updatelist)]
